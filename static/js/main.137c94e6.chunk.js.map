{"version":3,"sources":["redux/Cart/cart-types.js","redux/Cart/cart-actions.js","components/CartItem.js","components/CartContainer.js","components/NavBar.js","components/Product.js","components/ProductsList.js","redux/Cart/cart-reducers.js","redux/rootReducer.js","store.js","components/Footer.js","index.js"],"names":["ADD_PRODUCT","REMOVE_PRODUCT","GET_CART_NUMBERS","GET_TOTAL_PRICE","addToCart","item","dispatch","console","log","type","actionTypes","payload","getTotalPrice","connect","state","cartState","removeFromCart","props","className","src","image","title","onClick","handleRemoveFromCart","class","quantity","handleAddToCart","useState","cartContainerDisplay","setCartContainerDisplay","totalPrice","useSelector","variant","cartTotalNumber","cartProducts","map","id","toFixed","href","price","alt","ProductsList","data","setData","inputValue","useEffect","getProducts","a","fetch","then","res","json","obj","placeholder","filter","toLowerCase","includes","INITIAL_STATE","cartReducer","action","itemFromCartProducts","find","length","itemFromCartProductsToRemove","newCartProducts","reduce","acc","value","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Footer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.137c94e6.chunk.js","sourcesContent":["export const ADD_PRODUCT = \"ADD_PRODUCT\";\r\nexport const REMOVE_PRODUCT = \"REMOVE_PRODUCT\";\r\nexport const GET_CART_NUMBERS = \"GET_CART_NUMBERS\";\r\nexport const GET_TOTAL_PRICE = \"GET_TOTAL_PRICE\";\r\n","import * as actionTypes from \"./cart-types\";\r\n\r\nexport const addToCart = (item) => {\r\n  return (dispatch) => {\r\n    console.log(\"adding to cart\");\r\n    dispatch({\r\n      type: actionTypes.ADD_PRODUCT,\r\n      payload: {\r\n        ...item,\r\n      },\r\n    });\r\n    dispatch(getTotalPrice());\r\n  };\r\n};\r\n\r\nexport const getcartTotalNumber = () => {\r\n  return (dispatch) => {\r\n    console.log(\"getting number\");\r\n    dispatch({\r\n      type: actionTypes.GET_CART_NUMBERS,\r\n    });\r\n  };\r\n};\r\n\r\nexport const removeFromCart = (item) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: actionTypes.REMOVE_PRODUCT,\r\n      payload: {\r\n        ...item,\r\n      },\r\n    });\r\n    dispatch(getTotalPrice());\r\n  };\r\n};\r\n\r\nexport const getTotalPrice = () => {\r\n  return {\r\n    type: actionTypes.GET_TOTAL_PRICE,\r\n    payload: {},\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { addToCart, removeFromCart } from \"../redux/Cart/cart-actions\";\r\n\r\nconst CartItem = (props) => {\r\n  const item = props.item;\r\n  const handleAddToCart = (item) => {\r\n    console.log(\"hola\");\r\n    props.addToCart(item);\r\n  };\r\n  const handleRemoveFromCart = (item) => {\r\n    console.log(\"removiendo\");\r\n    props.removeFromCart(item);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"items\">\r\n        <img src={item.image} />\r\n        <div className=\"item-title\">{item.title}</div>\r\n        <div className=\"buttons-container\">\r\n          {\" \"}\r\n          <button onClick={() => handleRemoveFromCart(item)}>\r\n            {\" \"}\r\n            <i class=\"fas fa-minus-circle\"></i>\r\n          </button>\r\n          <div className=\"quantity\">{item.quantity}</div>\r\n          <button onClick={() => handleAddToCart(item)}>\r\n            {\" \"}\r\n            <i class=\"fas fa-plus-circle\"></i>{\" \"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cartState: state.cartState,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addToCart, removeFromCart })(\r\n  CartItem\r\n);\r\n","import React, { useState } from \"react\";\r\nimport { Button, NavItem } from \"react-bootstrap\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport CartItem from \"./CartItem\";\r\n\r\nconst CartContainer = (props) => {\r\n  console.log(props);\r\n  const [cartContainerDisplay, setCartContainerDisplay] = useState(false);\r\n  const { totalPrice } = useSelector((state) => state.cartState);\r\n\r\n  const showCartContainer = () => {\r\n    setCartContainerDisplay(!cartContainerDisplay);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"cart-navbar\">\r\n        <button variant=\"light\" onClick={showCartContainer}>\r\n          <i class=\"fas fa-shopping-basket\"></i>\r\n        </button>\r\n        <span>{props.cartState.cartTotalNumber}</span>\r\n      </div>\r\n\r\n      {cartContainerDisplay && (\r\n        <>\r\n          <div className=\"cart-container\">\r\n            {props.cartState.cartTotalNumber === 0 ? (\r\n              <h5> Your cart is empty</h5>\r\n            ) : (\r\n              props.cartState.cartProducts.map((item) => {\r\n                return <CartItem key={item.id} item={item} />;\r\n              })\r\n            )}{\" \"}\r\n            <div className=\"total-container\">\r\n              Total: {totalPrice.toFixed(2)}â‚¬\r\n            </div>\r\n            <button className=\"checkout-btn\">Checkout</button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n  //cart.map y devuelve cada cartItem\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  cartState: state.cartState,\r\n});\r\nexport default connect(mapStateToProps)(CartContainer);\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Nav, Navbar } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport CartContainer from \"./CartContainer\";\r\n\r\nconst NavBar = (props) => {\r\n  console.log(props);\r\n  return (\r\n    <>\r\n      <div class=\"logo-container sticky\">\r\n        <div class=\"logo\">\r\n          <h1>The New Store</h1>\r\n        </div>\r\n        <nav class=\"menu\">\r\n          <ul>\r\n            <li>\r\n              <a href=\"#\">About</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\">Contact</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#\">\r\n                <CartContainer />\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  cartState: state.cartState,\r\n});\r\nexport default connect(mapStateToProps)(NavBar);\r\n{\r\n  /* <Navbar className=\"navbar sticky\" bg=\"light\" variant=\"light\">\r\n      <Navbar.Brand className=\"navbar-brand\" href=\"#home\">\r\n        The New Store\r\n      </Navbar.Brand>\r\n      <Nav className=\"navlinks\">\r\n        {\" \"}\r\n        <a href=\"#thenewstore\">Categories</a>\r\n        <a href=\"#about\">About</a>\r\n        <div style={{ float: \"right\" }} className=\"navlink-right\">\r\n          {\" \"}\r\n          <Nav.Link href=\"#cart\">\r\n            <CartContainer />\r\n          </Nav.Link>\r\n        </div>\r\n      </Nav>\r\n    </Navbar> */\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addToCart } from \"../redux/Cart/cart-actions\";\r\n\r\nconst Product = (props) => {\r\n  const item = props.item;\r\n  const { id, title, image, price } = item;\r\n  const [cart, setCart] = useState([]);\r\n\r\n  const CartProducts = (id, number) => {\r\n    return {\r\n      id: id,\r\n      amount: number,\r\n    };\r\n  };\r\n\r\n  const handleAddProduct = () => {\r\n    var item = cart.find((o) => (o.id = id));\r\n\r\n    var amount = 0;\r\n    if (item === undefined) {\r\n      amount = 1;\r\n      setCart([...cart, CartProducts(id, amount)]);\r\n    } else {\r\n      item.amount += 1;\r\n      setCart([...cart]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    // <div className=\"product\">\r\n    //   <img src={image} alt={title} />{\" \"}\r\n    //   <div className=\"productTitle\">{title.substring(0, 40)}</div>\r\n    //   <div className=\"priceProduct\">{price} â‚¬</div>\r\n    //   <button\r\n    //     type=\"\"\r\n    //     className=\"addButton\"\r\n    //     onClick={() => props.addToCart(item)}\r\n    //   >\r\n    //     ADD\r\n    //   </button>\r\n    // </div>\r\n    <div className=\"product\">\r\n      <div>\r\n        {\" \"}\r\n        <img src={image} alt={title} />\r\n      </div>\r\n\r\n      <div className=\"content-product\">\r\n        {\" \"}\r\n        {/* <div className=\"productTitle\">{title.substring(0, 40)}</div> */}\r\n        <div className=\"productTitle\">{title}</div>\r\n        <div className=\"priceProduct\">{price} â‚¬</div>\r\n        <button\r\n          type=\"\"\r\n          className=\"addButton\"\r\n          onClick={() => props.addToCart(item)}\r\n        >\r\n          ADD\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cartState: state.cartState,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addToCart })(Product);\r\n","import React, { useEffect, useState } from \"react\";\r\n// import { Product } from \"./Product\";\r\nimport { connect } from \"react-redux\";\r\nimport { addToCart } from \"../redux/Cart/cart-actions\";\r\nimport Product from \"./Product\";\r\n\r\nconst ProductsList = (props) => {\r\n  console.log(props);\r\n  const [data, setData] = useState([]);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  // const [cartTotalNumber, setcartTotalNumber] = useState(0);\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n  }, []);\r\n\r\n  const getProducts = async () => {\r\n    fetch(\"https://fakestoreapi.com/products\")\r\n      .then((res) => res.json())\r\n      .then((obj) => setData(obj));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"hero\"></div>\r\n      {/* <div className=\"input-search\" onChange={handleInputChange}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search ï€‚\"\r\n          className=\"inputSearch form-control\"\r\n        />\r\n      </div> */}\r\n      {/* <form className=\"search-container\">\r\n        <input\r\n          type=\"text\"\r\n          id=\"search-bar\"\r\n          placeholder=\"What do you wish for today?\"\r\n          className=\"form-control\"\r\n        />\r\n        <a href=\"#\">\r\n          <img\r\n            className=\"search-icon\"\r\n            src=\"http://www.endlessicons.com/wp-content/uploads/2012/12/search-icon.png\"\r\n          />\r\n        </a>\r\n      </form> */}\r\n      <div className=\"search-container\">\r\n        <input\r\n          type=\"text\"\r\n          id=\"search-bar\"\r\n          placeholder=\"What do you wish for today?\"\r\n          className=\"form-control\"\r\n        />\r\n        {/* <a href=\"#\">\r\n          <img\r\n            className=\"search-icon\"\r\n            src=\"http://www.endlessicons.com/wp-content/uploads/2012/12/search-icon.png\"\r\n          />\r\n        </a> */}\r\n        <a href=\"#\">\r\n          <div className=\"search-icon\">\r\n            <i class=\"fas fa-search\"></i>\r\n          </div>\r\n        </a>\r\n      </div>\r\n      <div className=\"productList\">\r\n        {data\r\n          .filter((item) =>\r\n            item.title.toLowerCase().includes(inputValue.toLowerCase())\r\n          )\r\n          .map((item) => {\r\n            return <Product item={item} key={item.id} />;\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ProductsList;\r\n","import * as actionTypes from \"./cart-types\";\r\n\r\nconst INITIAL_STATE = {\r\n  cartTotalNumber: 0,\r\n\r\n  cartProducts: [], // {id, title, img, price, amount}\r\n\r\n  totalPrice: 0,\r\n};\r\n\r\nconst cartReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_PRODUCT:\r\n      const itemFromCartProducts = state.cartProducts.find(\r\n        (item) => item.id === action.payload.id\r\n      );\r\n      if (itemFromCartProducts != null) itemFromCartProducts.quantity++;\r\n      const cartProducts =\r\n        itemFromCartProducts == null\r\n          ? [...state.cartProducts, { ...action.payload, quantity: 1 }]\r\n          : [...state.cartProducts];\r\n\r\n      return {\r\n        cartProducts: cartProducts,\r\n        cartTotalNumber: cartProducts.length,\r\n      };\r\n    case actionTypes.GET_CART_NUMBERS:\r\n      return {\r\n        ...state,\r\n      };\r\n    case actionTypes.REMOVE_PRODUCT:\r\n      const itemFromCartProductsToRemove = state.cartProducts.find(\r\n        (item) => item.id === action.payload.id\r\n      );\r\n      if (itemFromCartProductsToRemove != null)\r\n        itemFromCartProductsToRemove.quantity--;\r\n      const newCartProducts = [\r\n        ...state.cartProducts.filter((item) => item.quantity > 0),\r\n      ];\r\n      return {\r\n        cartProducts: newCartProducts,\r\n        cartTotalNumber: newCartProducts.length,\r\n      };\r\n    case actionTypes.GET_TOTAL_PRICE:\r\n      if (state.cartProducts === null || state.cartProducts.length === 0)\r\n        return { ...state };\r\n      const totalPrice = state.cartProducts\r\n        .map((item) => item.price * item.quantity)\r\n        .reduce((acc, value) => acc + value);\r\n      return { ...state, totalPrice: totalPrice };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cartReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport cartReducer from \"./Cart/cart-reducers\";\r\n\r\nexport default combineReducers({\r\n  cartState: cartReducer,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n//import cartReducer from \"./redux/Cart/cart-reducers\";\r\nimport rootReducer from \"./redux/rootReducer\";\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\n\r\nexport const Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <i class=\"far fa-copyright\">2021</i>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport NavBar from \"./components/NavBar\";\nimport ProductsList from \"./components/ProductsList\";\nimport store from \"./store\";\nimport { Footer } from \"./components/Footer\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <NavBar />\n    <ProductsList />\n    <Footer />\n    {/* <GetProducts /> */}\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}