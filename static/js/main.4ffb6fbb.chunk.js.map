{"version":3,"sources":["redux/Cart/cart-types.js","redux/Cart/cart-actions.js","components/CartItem.js","components/CartContainer.js","components/NavBar.js","components/Product.js","components/ProductsList.js","redux/Cart/cart-reducers.js","redux/rootReducer.js","store.js","index.js"],"names":["ADD_PRODUCT","REMOVE_PRODUCT","GET_CART_NUMBERS","addToCart","item","dispatch","console","log","type","actionTypes","payload","connect","state","cartState","removeFromCart","props","className","Button","variant","onClick","handleRemoveFromCart","title","quantity","handleAddToCart","useState","cartContainerDisplay","setCartContainerDisplay","xmlns","width","height","fill","viewBox","d","cartTotalNumber","cartProducts","map","id","Navbar","bg","Brand","href","Nav","Link","image","price","src","alt","ProductsList","data","setData","useEffect","getProducts","a","fetch","then","res","json","obj","INITIAL_STATE","cartReducer","action","itemFromCartProducts","find","length","itemFromCartProductsToRemove","newCartProducts","filter","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4ffb6fbb.chunk.js","sourcesContent":["export const ADD_PRODUCT = \"ADD_PRODUCT\";\r\nexport const REMOVE_PRODUCT = \"REMOVE_PRODUCT\";\r\nexport const GET_CART_NUMBERS = \"GET_CART_NUMBERS\";\r\n","import * as actionTypes from \"./cart-types\";\r\n\r\nexport const addToCart = (item) => {\r\n  return (dispatch) => {\r\n    console.log(\"adding to cart\");\r\n    dispatch({\r\n      type: actionTypes.ADD_PRODUCT,\r\n      payload: {\r\n        ...item,\r\n      },\r\n    });\r\n  };\r\n};\r\n\r\nexport const getcartTotalNumber = () => {\r\n  return (dispatch) => {\r\n    console.log(\"getting number\");\r\n    dispatch({\r\n      type: actionTypes.GET_CART_NUMBERS,\r\n    });\r\n  };\r\n};\r\n\r\nexport const removeFromCart = (item) => {\r\n  return {\r\n    type: actionTypes.REMOVE_PRODUCT,\r\n    payload: {\r\n      ...item,\r\n    },\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { addToCart, removeFromCart } from \"../redux/Cart/cart-actions\";\r\n\r\nconst CartItem = (props) => {\r\n  const item = props.item;\r\n  const handleAddToCart = (item) => {\r\n    console.log(\"hola\");\r\n    props.addToCart(item);\r\n  };\r\n  const handleRemoveFromCart = (item) => {\r\n    console.log(\"removiendo\");\r\n    props.removeFromCart(item);\r\n  };\r\n  return (\r\n    <div className=\"cartItem\">\r\n      <Button variant=\"outline-dark\" onClick={() => handleRemoveFromCart(item)}>\r\n        -\r\n      </Button>\r\n      <div className=\"itemInCart\">\r\n        {item.title} {item.quantity}\r\n      </div>\r\n      <Button variant=\"outline-dark\" onClick={() => handleAddToCart(item)}>\r\n        +\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cartState: state.cartState,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addToCart, removeFromCart })(\r\n  CartItem\r\n);\r\n","import React, { useState } from \"react\";\r\nimport { Button, NavItem } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport CartItem from \"./CartItem\";\r\n\r\nconst CartContainer = (props) => {\r\n  console.log(props);\r\n  const [cartContainerDisplay, setCartContainerDisplay] = useState(false);\r\n\r\n  const showCartContainer = () => {\r\n    setCartContainerDisplay(!cartContainerDisplay);\r\n  };\r\n  return (\r\n    <div className=\"cartContainer\">\r\n      <Button variant=\"dark\" onClick={showCartContainer}>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"25\"\r\n          height=\"25\"\r\n          fill=\"currentColor\"\r\n          className=\"bi bi-basket2-fill\"\r\n          viewBox=\"0 0 16 16\"\r\n        >\r\n          <path d=\"M5.929 1.757a.5.5 0 1 0-.858-.514L2.217 6H.5a.5.5 0 0 0-.5.5v1a.5.5 0 0 0 .5.5h.623l1.844 6.456A.75.75 0 0 0 3.69 15h8.622a.75.75 0 0 0 .722-.544L14.877 8h.623a.5.5 0 0 0 .5-.5v-1a.5.5 0 0 0-.5-.5h-1.717L10.93 1.243a.5.5 0 1 0-.858.514L12.617 6H3.383L5.93 1.757zM4 10a1 1 0 0 1 2 0v2a1 1 0 1 1-2 0v-2zm3 0a1 1 0 0 1 2 0v2a1 1 0 1 1-2 0v-2zm4-1a1 1 0 0 1 1 1v2a1 1 0 1 1-2 0v-2a1 1 0 0 1 1-1z\" />\r\n        </svg>\r\n      </Button>\r\n      <span>{props.cartState.cartTotalNumber}</span>\r\n      {cartContainerDisplay &&\r\n        (props.cartState.cartTotalNumber === 0 ? (\r\n          <div>\r\n            <h5> Your cart is empty</h5>\r\n          </div>\r\n        ) : (\r\n          props.cartState.cartProducts.map((item) => {\r\n            console.log(\"abriendo cart\");\r\n            return <CartItem key={item.id} item={item} />;\r\n          })\r\n        ))}\r\n    </div>\r\n  );\r\n  //cart.map y devuelve cada cartItem\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  cartState: state.cartState,\r\n});\r\nexport default connect(mapStateToProps)(CartContainer);\r\n","import React, { useState } from \"react\";\r\nimport { Nav, Navbar } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport CartContainer from \"./CartContainer\";\r\n\r\nconst NavBar = (props) => {\r\n  console.log(props);\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n      <Navbar.Brand href=\"#home\">Home</Navbar.Brand>\r\n      <Nav className=\"mr-auto\">\r\n        <Nav.Link href=\"#thenewstore\">The New Store</Nav.Link>\r\n        <Nav.Link href=\"#about\">About</Nav.Link>\r\n        <Nav.Link href=\"#cart\">\r\n          <CartContainer />\r\n        </Nav.Link>\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  cartState: state.cartState,\r\n});\r\nexport default connect(mapStateToProps)(NavBar);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addToCart } from \"../redux/Cart/cart-actions\";\r\n\r\nconst Product = (props) => {\r\n  const item = props.item;\r\n  const { id, title, image, price } = item;\r\n  const [cart, setCart] = useState([]);\r\n\r\n  const CartProducts = (id, number) => {\r\n    return {\r\n      id: id,\r\n      amount: number,\r\n    };\r\n  };\r\n\r\n  const handleAddProduct = () => {\r\n    var item = cart.find((o) => (o.id = id));\r\n\r\n    var amount = 0;\r\n    if (item === undefined) {\r\n      amount = 1;\r\n      setCart([...cart, CartProducts(id, amount)]);\r\n    } else {\r\n      item.amount += 1;\r\n      setCart([...cart]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"product\">\r\n      <img src={image} alt={title} />\r\n      <div className=\"productTitle\">{title}</div>\r\n      <div className=\"priceProduct\">{price}</div>\r\n\r\n      <button\r\n        type=\"\"\r\n        className=\"addButton\"\r\n        onClick={() => props.addToCart(item)}\r\n      >\r\n        ADD\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cartState: state.cartState,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addToCart })(Product);\r\n","import React, { useEffect, useState } from \"react\";\r\n// import { Product } from \"./Product\";\r\nimport { connect } from \"react-redux\";\r\nimport { addToCart } from \"../redux/Cart/cart-actions\";\r\nimport Product from \"./Product\";\r\n\r\nconst ProductsList = (props) => {\r\n  console.log(props);\r\n  const [data, setData] = useState([]);\r\n\r\n  // const [cartTotalNumber, setcartTotalNumber] = useState(0);\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n  }, []);\r\n\r\n  const getProducts = async () => {\r\n    fetch(\"https://fakestoreapi.com/products\")\r\n      .then((res) => res.json())\r\n      .then((obj) => setData(obj));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Prueba</h1>\r\n      <div className=\"productList\">\r\n        {data.map((item) => {\r\n          return <Product item={item} key={item.id} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ProductsList;\r\n","import * as actionTypes from \"./cart-types\";\r\n\r\nconst INITIAL_STATE = {\r\n  cartTotalNumber: 0,\r\n\r\n  cartProducts: [], // {id, title, img, price, amount}\r\n};\r\n\r\nconst cartReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_PRODUCT:\r\n      const itemFromCartProducts = state.cartProducts.find(\r\n        (item) => item.id === action.payload.id\r\n      );\r\n      if (itemFromCartProducts != null) itemFromCartProducts.quantity++;\r\n      const cartProducts =\r\n        itemFromCartProducts == null\r\n          ? [...state.cartProducts, { ...action.payload, quantity: 1 }]\r\n          : [...state.cartProducts];\r\n\r\n      return {\r\n        cartProducts: cartProducts,\r\n        cartTotalNumber: cartProducts.length,\r\n      };\r\n    case actionTypes.GET_CART_NUMBERS:\r\n      return {\r\n        ...state,\r\n      };\r\n    case actionTypes.REMOVE_PRODUCT:\r\n      const itemFromCartProductsToRemove = state.cartProducts.find(\r\n        (item) => item.id === action.payload.id\r\n      );\r\n      if (itemFromCartProductsToRemove != null) itemFromCartProductsToRemove.quantity--;\r\n      const newCartProducts = [\r\n        ...state.cartProducts.filter((item) => item.quantity > 0),\r\n      ];\r\n      return {\r\n        cartProducts: newCartProducts,\r\n        cartTotalNumber: newCartProducts.length,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cartReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport cartReducer from \"./Cart/cart-reducers\";\r\n\r\nexport default combineReducers({\r\n  cartState: cartReducer,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n//import cartReducer from \"./redux/Cart/cart-reducers\";\r\nimport rootReducer from \"./redux/rootReducer\";\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport NavBar from \"./components/NavBar\";\nimport ProductsList from \"./components/ProductsList\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <NavBar />\n    <ProductsList />\n    {/* <GetProducts /> */}\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}