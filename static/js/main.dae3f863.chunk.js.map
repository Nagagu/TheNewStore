{"version":3,"sources":["redux/Cart/cart-types.js","redux/Cart/cart-actions.js","components/CartItem.js","components/CartContainer.js","components/NavBar.js","components/Product.js","components/ProductsList.js","redux/Cart/cart-reducers.js","redux/rootReducer.js","store.js","index.js"],"names":["ADD_PRODUCT","REMOVE_PRODUCT","GET_CART_NUMBERS","addToCart","item","dispatch","console","log","type","actionTypes","payload","connect","state","cartState","removeFromCart","props","className","src","image","title","onClick","handleRemoveFromCart","class","quantity","handleAddToCart","useState","cartContainerDisplay","setCartContainerDisplay","Button","variant","cartTotalNumber","cartProducts","map","id","Navbar","bg","Brand","href","Nav","Link","price","alt","ProductsList","data","setData","inputValue","useEffect","getProducts","a","fetch","then","res","json","obj","placeholder","filter","toLowerCase","includes","INITIAL_STATE","cartReducer","action","itemFromCartProducts","find","length","itemFromCartProductsToRemove","newCartProducts","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dae3f863.chunk.js","sourcesContent":["export const ADD_PRODUCT = \"ADD_PRODUCT\";\r\nexport const REMOVE_PRODUCT = \"REMOVE_PRODUCT\";\r\nexport const GET_CART_NUMBERS = \"GET_CART_NUMBERS\";\r\n","import * as actionTypes from \"./cart-types\";\r\n\r\nexport const addToCart = (item) => {\r\n  return (dispatch) => {\r\n    console.log(\"adding to cart\");\r\n    dispatch({\r\n      type: actionTypes.ADD_PRODUCT,\r\n      payload: {\r\n        ...item,\r\n      },\r\n    });\r\n  };\r\n};\r\n\r\nexport const getcartTotalNumber = () => {\r\n  return (dispatch) => {\r\n    console.log(\"getting number\");\r\n    dispatch({\r\n      type: actionTypes.GET_CART_NUMBERS,\r\n    });\r\n  };\r\n};\r\n\r\nexport const removeFromCart = (item) => {\r\n  return {\r\n    type: actionTypes.REMOVE_PRODUCT,\r\n    payload: {\r\n      ...item,\r\n    },\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { addToCart, removeFromCart } from \"../redux/Cart/cart-actions\";\r\n\r\nconst CartItem = (props) => {\r\n  const item = props.item;\r\n  const handleAddToCart = (item) => {\r\n    console.log(\"hola\");\r\n    props.addToCart(item);\r\n  };\r\n  const handleRemoveFromCart = (item) => {\r\n    console.log(\"removiendo\");\r\n    props.removeFromCart(item);\r\n  };\r\n  return (\r\n    // <div className=\"cartItem\">\r\n    <div className=\"items\">\r\n      <img src={item.image} />\r\n      <div className=\"item-title\">{item.title}</div>\r\n      <div className=\"buttons-container\">\r\n        {\" \"}\r\n        <button onClick={() => handleRemoveFromCart(item)}>\r\n          {\" \"}\r\n          <i class=\"fas fa-minus-circle\"></i>\r\n        </button>\r\n        <div>{item.quantity}</div>\r\n        <button onClick={() => handleAddToCart(item)}>\r\n          {\" \"}\r\n          <i class=\"fas fa-plus-circle\"></i>{\" \"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    // <div className=\"cartItem\">\r\n    //   <Button variant=\"outline-dark\" onClick={() => handleRemoveFromCart(item)}>\r\n    //     -\r\n    //   </Button>\r\n    //   <div className=\"itemInCart\">\r\n    //     {item.title} {item.quantity}\r\n    //   </div>\r\n    //   <Button variant=\"outline-dark\" onClick={() => handleAddToCart(item)}>\r\n    //     +\r\n    //   </Button>\r\n    // </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cartState: state.cartState,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addToCart, removeFromCart })(\r\n  CartItem\r\n);\r\n","import React, { useState } from \"react\";\r\nimport { Button, NavItem } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport CartItem from \"./CartItem\";\r\n\r\nconst CartContainer = (props) => {\r\n  console.log(props);\r\n  const [cartContainerDisplay, setCartContainerDisplay] = useState(false);\r\n\r\n  const showCartContainer = () => {\r\n    setCartContainerDisplay(!cartContainerDisplay);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"cart-navbar\">\r\n        <Button variant=\"light\" onClick={showCartContainer}>\r\n          <i class=\"fa fa-shopping-cart\"></i>\r\n        </Button>\r\n        <span>{props.cartState.cartTotalNumber}</span>\r\n      </div>\r\n\r\n      {cartContainerDisplay && (\r\n        <div className=\"cart-container\">\r\n          {props.cartState.cartTotalNumber === 0 ? (\r\n            <h5> Your cart is empty</h5>\r\n          ) : (\r\n            props.cartState.cartProducts.map((item) => {\r\n              return <CartItem key={item.id} item={item} />;\r\n            })\r\n          )}{\" \"}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n  //cart.map y devuelve cada cartItem\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  cartState: state.cartState,\r\n});\r\nexport default connect(mapStateToProps)(CartContainer);\r\n","import React, { useState } from \"react\";\r\nimport { Nav, Navbar } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport CartContainer from \"./CartContainer\";\r\n\r\nconst NavBar = (props) => {\r\n  // const [inputValue, setInputValue] = useState(\"\");\r\n  // const handleInputChange = (e) => {\r\n  //   setInputValue(e.target.value);\r\n  // };\r\n  console.log(props);\r\n  return (\r\n    <Navbar className=\"navBar\" bg=\"light\" variant=\"light\">\r\n      <Navbar.Brand href=\"#home\">The New Store</Navbar.Brand>\r\n      <Nav className=\"mr-auto\">\r\n        <Nav.Link href=\"#thenewstore\">Categories</Nav.Link>\r\n        <Nav.Link href=\"#about\">About</Nav.Link>\r\n        {/* <div className=\"input-search\" onChange={handleInputChange}>\r\n          <input type=\"text\" className=\"form-control\" />\r\n        </div> */}\r\n\r\n        <Nav.Link href=\"#cart\">\r\n          <CartContainer />\r\n        </Nav.Link>\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  cartState: state.cartState,\r\n});\r\nexport default connect(mapStateToProps)(NavBar);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addToCart } from \"../redux/Cart/cart-actions\";\r\n\r\nconst Product = (props) => {\r\n  const item = props.item;\r\n  const { id, title, image, price } = item;\r\n  const [cart, setCart] = useState([]);\r\n\r\n  const CartProducts = (id, number) => {\r\n    return {\r\n      id: id,\r\n      amount: number,\r\n    };\r\n  };\r\n\r\n  const handleAddProduct = () => {\r\n    var item = cart.find((o) => (o.id = id));\r\n\r\n    var amount = 0;\r\n    if (item === undefined) {\r\n      amount = 1;\r\n      setCart([...cart, CartProducts(id, amount)]);\r\n    } else {\r\n      item.amount += 1;\r\n      setCart([...cart]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"product\">\r\n      <img src={image} alt={title} />\r\n      <div className=\"productTitle\">{title}</div>\r\n      <div className=\"priceProduct\">{price} €</div>\r\n\r\n      <button\r\n        type=\"\"\r\n        className=\"addButton\"\r\n        onClick={() => props.addToCart(item)}\r\n      >\r\n        ADD\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cartState: state.cartState,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addToCart })(Product);\r\n","import React, { useEffect, useState } from \"react\";\r\n// import { Product } from \"./Product\";\r\nimport { connect } from \"react-redux\";\r\nimport { addToCart } from \"../redux/Cart/cart-actions\";\r\nimport Product from \"./Product\";\r\n\r\nconst ProductsList = (props) => {\r\n  console.log(props);\r\n  const [data, setData] = useState([]);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  // const [cartTotalNumber, setcartTotalNumber] = useState(0);\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n  }, []);\r\n\r\n  const getProducts = async () => {\r\n    fetch(\"https://fakestoreapi.com/products\")\r\n      .then((res) => res.json())\r\n      .then((obj) => setData(obj));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"hero\"></div>\r\n      {/* <div className=\"input-search\" onChange={handleInputChange}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search \"\r\n          className=\"inputSearch form-control\"\r\n        />\r\n      </div> */}\r\n      {/* <form className=\"search-container\">\r\n        <input\r\n          type=\"text\"\r\n          id=\"search-bar\"\r\n          placeholder=\"What do you wish for today?\"\r\n          className=\"form-control\"\r\n        />\r\n        <a href=\"#\">\r\n          <img\r\n            className=\"search-icon\"\r\n            src=\"http://www.endlessicons.com/wp-content/uploads/2012/12/search-icon.png\"\r\n          />\r\n        </a>\r\n      </form> */}\r\n      <div className=\"search-container\">\r\n        <input\r\n          type=\"text\"\r\n          id=\"search-bar\"\r\n          placeholder=\"What do you wish for today?\"\r\n          className=\"form-control\"\r\n        />\r\n        {/* <a href=\"#\">\r\n          <img\r\n            className=\"search-icon\"\r\n            src=\"http://www.endlessicons.com/wp-content/uploads/2012/12/search-icon.png\"\r\n          />\r\n        </a> */}\r\n        <a href=\"#\">\r\n          <div className=\"search-icon\">\r\n            <i class=\"fas fa-search\"></i>\r\n          </div>\r\n        </a>\r\n      </div>\r\n      <div className=\"productList\">\r\n        {data\r\n          .filter((item) =>\r\n            item.title.toLowerCase().includes(inputValue.toLowerCase())\r\n          )\r\n          .map((item) => {\r\n            return <Product item={item} key={item.id} />;\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ProductsList;\r\n","import * as actionTypes from \"./cart-types\";\r\n\r\nconst INITIAL_STATE = {\r\n  cartTotalNumber: 0,\r\n\r\n  cartProducts: [], // {id, title, img, price, amount}\r\n};\r\n\r\nconst cartReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_PRODUCT:\r\n      const itemFromCartProducts = state.cartProducts.find(\r\n        (item) => item.id === action.payload.id\r\n      );\r\n      if (itemFromCartProducts != null) itemFromCartProducts.quantity++;\r\n      const cartProducts =\r\n        itemFromCartProducts == null\r\n          ? [...state.cartProducts, { ...action.payload, quantity: 1 }]\r\n          : [...state.cartProducts];\r\n\r\n      return {\r\n        cartProducts: cartProducts,\r\n        cartTotalNumber: cartProducts.length,\r\n      };\r\n    case actionTypes.GET_CART_NUMBERS:\r\n      return {\r\n        ...state,\r\n      };\r\n    case actionTypes.REMOVE_PRODUCT:\r\n      const itemFromCartProductsToRemove = state.cartProducts.find(\r\n        (item) => item.id === action.payload.id\r\n      );\r\n      if (itemFromCartProductsToRemove != null) itemFromCartProductsToRemove.quantity--;\r\n      const newCartProducts = [\r\n        ...state.cartProducts.filter((item) => item.quantity > 0),\r\n      ];\r\n      return {\r\n        cartProducts: newCartProducts,\r\n        cartTotalNumber: newCartProducts.length,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cartReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport cartReducer from \"./Cart/cart-reducers\";\r\n\r\nexport default combineReducers({\r\n  cartState: cartReducer,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n//import cartReducer from \"./redux/Cart/cart-reducers\";\r\nimport rootReducer from \"./redux/rootReducer\";\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport NavBar from \"./components/NavBar\";\nimport ProductsList from \"./components/ProductsList\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <NavBar />\n    <ProductsList />\n    {/* <GetProducts /> */}\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}